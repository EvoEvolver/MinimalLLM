import{_ as n,o as a,c as s,a as e}from"./app-4b88ea5f.js";const t={},p=e(`<h1 id="minimalllm" tabindex="-1"><a class="header-anchor" href="#minimalllm" aria-hidden="true">#</a> MinimalLLM</h1><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> MinimalLLM
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Minimal and handy interfaces of LLMs based on LiteLLM.</p><p>Features:</p><ul><li>Minimal and intuitive interfaces. You don&#39;t need to learn</li><li>Handy cache system for faster testing</li><li>Support for multiple LLMs by LiteLLM</li></ul><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>Chat</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> mllm <span class="token keyword">import</span> Chat
chat <span class="token operator">=</span> Chat<span class="token punctuation">(</span><span class="token punctuation">)</span>
chat <span class="token operator">+=</span> <span class="token string">&quot;Give me a random number from 1 to 10&quot;</span>
res <span class="token operator">=</span> chat<span class="token punctuation">.</span>complete<span class="token punctuation">(</span>cache<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
chat <span class="token operator">=</span> Chat<span class="token punctuation">(</span><span class="token punctuation">)</span>
chat <span class="token operator">+=</span> <span class="token string">&quot;Give a json dict with keys &#39;a&#39; and &#39;b&#39; and values 1 and 2&quot;</span>
res <span class="token operator">=</span> chat<span class="token punctuation">.</span>complete<span class="token punctuation">(</span>parse<span class="token operator">=</span><span class="token string">&quot;dict&quot;</span><span class="token punctuation">,</span> cache<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token comment"># addtional results will be stored in chat.additional_res</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>chat<span class="token punctuation">.</span>additional_res<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>More options of <code>chat.complete</code> is available at <a href="./options">here</a></p><p>Embedding</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> mllm <span class="token keyword">import</span> get_embeddings
embeddings <span class="token operator">=</span> get_embeddings<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Hello, world!&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Goodbye, world!&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>embeddings<span class="token punctuation">)</span>
<span class="token comment"># Embeddings are automatically cached</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Visualized Log of chats</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> mllm <span class="token keyword">import</span> Chat<span class="token punctuation">,</span> display_chats
<span class="token keyword">with</span> display_chats<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    chat <span class="token operator">=</span> Chat<span class="token punctuation">(</span><span class="token punctuation">)</span>
    chat <span class="token operator">+=</span> <span class="token string">&quot;Who is your developer?&quot;</span>
    res <span class="token operator">=</span> chat<span class="token punctuation">.</span>complete<span class="token punctuation">(</span>cache<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token comment"># A web page will be opened to show the chat log</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="providers" tabindex="-1"><a class="header-anchor" href="#providers" aria-hidden="true">#</a> Providers</h2><p>MinimalLLM is based on LiteLLM, which supports multiple providers. You can switch the provider to use different LLMs.</p><p>Switch provider</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> mllm<span class="token punctuation">.</span>provider_switch <span class="token keyword">import</span> set_default_to_anthropic
set_default_to_anthropic<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>To setup the API keys for the providers, we recommend to use the following streamlit app (run <code>pip install streamlit</code> first):</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> mllm<span class="token punctuation">.</span>setup <span class="token keyword">import</span> run_setup_app
run_setup_app<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="why-minimal" tabindex="-1"><a class="header-anchor" href="#why-minimal" aria-hidden="true">#</a> Why minimal?</h2><p>Minimal means stable. We only provide the most basic interfaces and features.</p>`,21),o=[p];function i(l,c){return a(),s("div",null,o)}const d=n(t,[["render",i],["__file","index.html.vue"]]);export{d as default};
